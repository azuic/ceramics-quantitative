{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\zuic1\\\\AppData\\\\Roaming\\\\npm-cache\\\\_npx\\\\23440\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\azuic\\\\major-studio-one\\\\Quantitative\\\\web\\\\src\\\\components\\\\EachCountry.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n            animation: \", \" 4s easy-in-out infinite\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n            0% {-webkit-transform: rotate(0deg);}\\n            100% {-webkit-transform: rotate(360deg);}\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            from {-webkit-transform:translate(0, 0px);}\\n            65% {-webkit-transform:translate(0, 50px);}\\n            to {-webkit-transform: translate(0, -0px);}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport { scale } from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\"; // import Sketch from 'react-p5';\n\nimport { objectData } from \"./Data\";\nimport P5Wrapper from \"react-p5-wrapper\";\nexport class EachCountry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false\n    };\n    this.handleSelected = this.handleSelected.bind(this);\n    this.sketch = this.sketch.bind(this);\n  }\n\n  handleSelected() {\n    this.setState(prevState => {\n      return {\n        isSelected: !prevState.isSelected\n      };\n    });\n  }\n\n  sketch(p) {\n    const count = this.props.objectCount;\n    const list = this.props.objectList;\n    const country = this.props.country; // const w = window.innerWidth;\n    // const h = window.innerHeight;\n\n    const w = 1000;\n    const h = 1000;\n\n    p.setup = () => {\n      p.createCanvas(w, h);\n    };\n\n    p.draw = () => {\n      // p.clear();\n      p.background(0, 0);\n      p.noStroke(); // const side=(w-40)/count;\n\n      const startX = w / 2 - 15;\n      const startY = 0;\n\n      for (let i = 0; i < count; i++) {\n        const obj = objectData.find(function (e) {\n          return e.objectID === list[i];\n        });\n\n        if (obj !== undefined) {\n          p.fill(obj.colors[0]);\n          p.rect(startX, startY + 10 * i, obj.percents[0] * 30, 10);\n          p.fill(obj.colors[1]);\n          p.rect(startX + obj.percents[0] * 30, startY + 10 * i, obj.percents[1] * 30, 10);\n          p.fill(obj.colors[2]);\n          p.rect(startX + (obj.percents[0] + obj.percents[1]) * 30, startY + 10 * i, obj.percents[2] * 30, 10);\n        } else {\n          p.fill('rgba(255,255,255, 0.25)');\n          p.rect(startX, 0, 30, 500);\n        }\n      }\n    };\n  }\n\n  render() {\n    const svgPath = \"https://storage.googleapis.com/ceramics/assets/\".concat(this.props.isoCode, \".svg\");\n    const width = this.props.width;\n    const height = this.props.height;\n    const lat = this.props.latLon[0];\n    const lon = this.props.latLon[1]; // const count = this.props.objectCount;\n    // const country = this.key;\n\n    const isSelected = this.state.isSelected; // console.log(objectIDs)\n    // const list = this.props.objectList;\n\n    let colors;\n\n    if (isSelected) {\n      colors = React.createElement(\"div\", {\n        style: {\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          'font-size': scale(this.props.objectCount, 1, 2616, 32, 300)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.props.country), React.createElement(\"p\", {\n        style: {\n          'font-size': scale(this.props.objectCount, 1, 2616, 32, 300)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.objectCount), React.createElement(P5Wrapper, {\n        sketch: this.sketch,\n        style: {\n          'z-index': 50,\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n\n    const sizeScale = scale(this.props.size, 2180, 3600950, 20, 500);\n    const countryStyle = {\n      opacity: scale(this.props.objectCount, 1, 2616, 0.1, 1),\n      top: Math.round(scale(-lat, -56.264, 40.901, height / 10, height / 10 * 9)),\n      left: Math.round(scale(lon, -102.553, 174.886, height / 10, width - height / 10)),\n      width: sizeScale,\n      height: sizeScale,\n      position: 'absolute'\n    };\n    const fillColor = isSelected ? \"#A6807A\" : \"#384e68\";\n    const floating = keyframes(_templateObject());\n    const spinning = keyframes(_templateObject2());\n    const Float = styled.div(_templateObject3(), floating);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(SVG, {\n      className: \"float\",\n      src: svgPath,\n      onClick: this.handleSelected,\n      style: countryStyle,\n      uniquifyIDs: true,\n      preProcessor: code => code.replace(/fill=\".*?\"/g, \"fill=\".concat(fillColor)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), colors);\n  }\n\n}","map":{"version":3,"sources":["D:\\azuic\\major-studio-one\\Quantitative\\web\\src\\components\\EachCountry.js"],"names":["React","SVG","scale","styled","css","keyframes","objectData","P5Wrapper","EachCountry","Component","constructor","props","state","isSelected","handleSelected","bind","sketch","setState","prevState","p","count","objectCount","list","objectList","country","w","h","setup","createCanvas","draw","background","noStroke","startX","startY","i","obj","find","e","objectID","undefined","fill","colors","rect","percents","render","svgPath","isoCode","width","height","lat","latLon","lon","top","sizeScale","size","countryStyle","opacity","Math","round","left","position","fillColor","floating","spinning","Float","div","code","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SVG from 'react-inlinesvg'\nimport  {scale} from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\";\n// import Sketch from 'react-p5';\nimport {objectData} from \"./Data\"\nimport P5Wrapper from \"react-p5-wrapper\";\n\nexport class EachCountry extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={isSelected:false};\n        this.handleSelected = this.handleSelected.bind(this);\n        this.sketch = this.sketch.bind(this);\n    }\n\n    handleSelected(){\n        this.setState((prevState)=>{\n            return {isSelected: !prevState.isSelected};\n        });\n    }\n\n    sketch(p){\n        const count = this.props.objectCount;\n        const list = this.props.objectList;\n        const country = this.props.country;\n        // const w = window.innerWidth;\n        // const h = window.innerHeight;\n        const w =1000;\n        const h =1000;\n        p.setup=()=>{\n            p.createCanvas(w, h);\n        }\n        p.draw=()=>{\n            // p.clear();\n            p.background(0,0);\n            p.noStroke();\n            // const side=(w-40)/count;\n            const startX=w/2-15;\n            const startY=0;\n\n            for (let i=0; i<count; i++){\n                const obj = objectData.find(function(e){ return e.objectID===list[i]})\n                if (obj !== undefined){\n                    p.fill(obj.colors[0]);\n                    p.rect(startX, startY+10*i,obj.percents[0]*30,10);\n                    p.fill(obj.colors[1]);\n                    p.rect(startX+obj.percents[0]*30,  startY+10*i, obj.percents[1]*30, 10);\n                    p.fill(obj.colors[2]);\n                    p.rect(startX+(obj.percents[0]+obj.percents[1])*30,  startY+10*i, obj.percents[2]*30,10);\n                } else {\n                    p.fill('rgba(255,255,255, 0.25)');\n                    p.rect(startX,0,30,500);\n                }\n\n            }\n        }\n    }\n\n    render(){\n        const svgPath = `https://storage.googleapis.com/ceramics/assets/${this.props.isoCode}.svg`;\n        const width = this.props.width;\n        const height = this.props.height;\n        const lat = this.props.latLon[0];\n        const lon = this.props.latLon[1];\n        // const count = this.props.objectCount;\n        // const country = this.key;\n        const {isSelected} = this.state;\n        // console.log(objectIDs)\n        // const list = this.props.objectList;\n        let colors;\n        if (isSelected){\n            colors = (\n                <div style={{top:0}}>\n                    <p style={{'font-size':scale(this.props.objectCount,1,2616,32,300), }}>{this.props.country}</p>\n                    <p style={{'font-size':scale(this.props.objectCount,1,2616,32,300), }}>{this.props.objectCount}</p>\n                    <P5Wrapper sketch={this.sketch} style={{'z-index':50, top:0}} />\n                </div>\n            )\n        }\n        const sizeScale=scale(this.props.size, 2180,3600950,20,500)\n        const countryStyle = {\n            opacity: scale(this.props.objectCount,1,2616,0.1,1),\n            top: Math.round(scale(-lat, -56.264,40.901,height/10, height/10*9)),\n            left: Math.round(scale(lon, -102.553,174.886,height/10, width-height/10)),\n            width: sizeScale,\n            height: sizeScale,\n            position: 'absolute'\n        };\n        const fillColor = isSelected?\"#A6807A\":\"#384e68\"\n        const floating = keyframes`\n            from {-webkit-transform:translate(0, 0px);}\n            65% {-webkit-transform:translate(0, 50px);}\n            to {-webkit-transform: translate(0, -0px);}`;\n        const spinning = keyframes`\n            0% {-webkit-transform: rotate(0deg);}\n            100% {-webkit-transform: rotate(360deg);}`;\n        const Float = styled.div`\n            animation: ${floating} 4s easy-in-out infinite`;\n\n\n\n        return(\n                <div>\n                    <SVG className=\"float\" src={svgPath} onClick={this.handleSelected} style={countryStyle} uniquifyIDs={true} preProcessor={code => code.replace(/fill=\".*?\"/g, `fill=${fillColor}`)}/>\n\n                    {colors}\n                </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}