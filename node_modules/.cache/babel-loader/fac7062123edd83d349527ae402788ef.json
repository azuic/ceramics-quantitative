{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\zuic1\\\\AppData\\\\Roaming\\\\npm-cache\\\\_npx\\\\26632\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\azuic\\\\major-studio-one\\\\Quantitative\\\\web\\\\src\\\\components\\\\EachCountry.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n            animation: \", \" 4s easy-in-out infinite\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n            0% {-webkit-transform: rotate(0deg);}\\n            100% {-webkit-transform: rotate(360deg);}\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            from {-webkit-transform:translate(0, 0px);}\\n            65% {-webkit-transform:translate(0, 50px);}\\n            to {-webkit-transform: translate(0, -0px);}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport { scale } from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport Sketch from 'react-p5';\nimport { objectData } from \"./Data\";\nexport class EachCountry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false\n    };\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  handleSelected() {\n    this.setState(prevState => {\n      return {\n        isSelected: !prevState.isSelected\n      };\n    });\n  }\n\n  render() {\n    const svgPath = \"https://storage.googleapis.com/ceramics/assets/\".concat(this.props.isoCode, \".svg\");\n    const width = this.props.width;\n    const height = this.props.height;\n    const lat = this.props.latLon[0];\n    const lon = this.props.latLon[1];\n    const count = this.props.objectCount;\n    const country = this.key;\n    const isSelected = this.state.isSelected; // console.log(objectIDs)\n\n    const list = this.props.objectList;\n    let colors;\n\n    if (isSelected) {\n      colors = React.createElement(Sketch, {\n        setup: (p5, parent) => {\n          p5.createCanvas(width - 40, 20 * 3).position(20, height - 15);\n        },\n        draw: p5 => {\n          p5.background(0, 0);\n          const side = (width - 40) / count;\n\n          for (let i = 0; i < count; i++) {\n            let obj = objectData.find(function (e) {\n              return e.objectID === list[i];\n            });\n            p5.fill(obj.colors[0]);\n            p5.rect(i * side, obj.percents[0] * 60, side, side);\n            p5.fill(obj.colors[1]);\n            p5.rect(i * side, (obj.percents[0] + obj.percents[1]) * 60, side, side);\n            p5.fill(obj.colors[2]);\n            p5.rect(i * side, obj.percents[0] + obj.percents[1] + obj.percents[2] * 60, side, side);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n\n    const sizeScale = scale(this.props.size, 2180, 3600950, 20, 500);\n    const countryStyle = {\n      opacity: scale(this.props.objectCount, 1, 2616, 0.1, 1),\n      top: Math.round(scale(-lat, -56.264, 40.901, height / 10, height / 10 * 9)),\n      left: Math.round(scale(lon, -102.553, 174.886, height / 10, width - height / 10)),\n      width: sizeScale,\n      height: sizeScale,\n      position: 'absolute'\n    };\n    const fillColor = isSelected ? \"#A6807A\" : \"#384e68\";\n    const floating = keyframes(_templateObject());\n    const spinning = keyframes(_templateObject2());\n    const Float = styled.div(_templateObject3(), floating);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(SVG, {\n      className: \"float\",\n      src: svgPath,\n      onMouseEnter: this.handleSelected,\n      onMouseLeave: this.handleSelected,\n      style: countryStyle,\n      uniquifyIDs: true,\n      preProcessor: code => code.replace(/fill=\".*?\"/g, \"fill=\".concat(fillColor)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), colors);\n  }\n\n}","map":{"version":3,"sources":["D:\\azuic\\major-studio-one\\Quantitative\\web\\src\\components\\EachCountry.js"],"names":["React","SVG","scale","styled","css","keyframes","Sketch","objectData","EachCountry","Component","constructor","props","state","isSelected","handleSelected","bind","setState","prevState","render","svgPath","isoCode","width","height","lat","latLon","lon","count","objectCount","country","key","list","objectList","colors","p5","parent","createCanvas","position","background","side","i","obj","find","e","objectID","fill","rect","percents","sizeScale","size","countryStyle","opacity","top","Math","round","left","fillColor","floating","spinning","Float","div","code","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SVG from 'react-inlinesvg'\nimport  {scale} from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport Sketch from 'react-p5';\nimport {objectData} from \"./Data\"\nexport class EachCountry extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={isSelected:false};\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n\n    handleSelected(){\n        this.setState((prevState)=>{\n            return {isSelected: !prevState.isSelected};\n        });\n    }\n\n    render(){\n        const svgPath = `https://storage.googleapis.com/ceramics/assets/${this.props.isoCode}.svg`;\n        const width = this.props.width;\n        const height = this.props.height;\n        const lat = this.props.latLon[0];\n        const lon = this.props.latLon[1];\n        const count = this.props.objectCount;\n        const country = this.key;\n        const {isSelected} = this.state;\n        // console.log(objectIDs)\n        const list = this.props.objectList;\n        let colors;\n        if (isSelected){\n            colors = (\n                <Sketch\n                    setup={(p5, parent)=>{\n                        p5.createCanvas(width-40, 20*3).position(20,height-15);\n                    }}\n                    draw={p5=>{\n                        p5.background(0,0);\n                        const side=(width-40)/count;\n                        for (let i=0; i<count; i++){\n                            let obj = objectData.find(function(e){ return e.objectID===list[i]})\n                            p5.fill(obj.colors[0]);\n                            p5.rect(i*side, obj.percents[0]*60, side, side);\n                            p5.fill(obj.colors[1]);\n                            p5.rect(i*side, (obj.percents[0]+obj.percents[1])*60, side, side);\n                            p5.fill(obj.colors[2]);\n                            p5.rect(i*side, (obj.percents[0]+obj.percents[1]+obj.percents[2]*60), side, side);\n                        }\n                    }} />\n            )\n        }\n        const sizeScale=scale(this.props.size, 2180,3600950,20,500)\n        const countryStyle = {\n            opacity: scale(this.props.objectCount,1,2616,0.1,1),\n            top: Math.round(scale(-lat, -56.264,40.901,height/10, height/10*9)),\n            left: Math.round(scale(lon, -102.553,174.886,height/10, width-height/10)),\n            width: sizeScale,\n            height: sizeScale,\n            position: 'absolute'\n        };\n        const fillColor = isSelected?\"#A6807A\":\"#384e68\"\n        const floating = keyframes`\n            from {-webkit-transform:translate(0, 0px);}\n            65% {-webkit-transform:translate(0, 50px);}\n            to {-webkit-transform: translate(0, -0px);}`;\n        const spinning = keyframes`\n            0% {-webkit-transform: rotate(0deg);}\n            100% {-webkit-transform: rotate(360deg);}`;\n        const Float = styled.div`\n            animation: ${floating} 4s easy-in-out infinite`;\n\n\n\n        return(\n                <div>\n                    <SVG className=\"float\" src={svgPath} onMouseEnter={this.handleSelected} onMouseLeave={this.handleSelected} style={countryStyle} uniquifyIDs={true} preProcessor={code => code.replace(/fill=\".*?\"/g, `fill=${fillColor}`)}/>\n\n                    {colors}\n                </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}